[{"/home/daisypang/Documents/proj/pose-tagging-web/src/App.tsx":"1","/home/daisypang/Documents/proj/pose-tagging-web/src/LabelDataDisplay.tsx":"2","/home/daisypang/Documents/proj/pose-tagging-web/src/KeypointGraph.tsx":"3","/home/daisypang/Documents/proj/pose-tagging-web/src/reportWebVitals.ts":"4","/home/daisypang/Documents/proj/pose-tagging-web/src/Keypoint.tsx":"5","/home/daisypang/Documents/proj/pose-tagging-web/src/Edge.tsx":"6","/home/daisypang/Documents/proj/pose-tagging-web/src/Footer.tsx":"7","/home/daisypang/Documents/proj/pose-tagging-web/src/ImageSprite.tsx":"8","/home/daisypang/Documents/proj/pose-tagging-web/src/InsertKPGTool.tsx":"9","/home/daisypang/Documents/proj/pose-tagging-web/src/index.tsx":"10","/home/daisypang/Documents/proj/pose-tagging-web/src/Viewport.tsx":"11","/home/daisypang/Documents/proj/pose-tagging-web/src/tools.ts":"12"},{"size":11808,"mtime":1610534041964,"results":"13","hashOfConfig":"14"},{"size":6704,"mtime":1610520326949,"results":"15","hashOfConfig":"14"},{"size":2568,"mtime":1610450442813,"results":"16","hashOfConfig":"14"},{"size":425,"mtime":1609770780543,"results":"17","hashOfConfig":"14"},{"size":2775,"mtime":1610357052240,"results":"18","hashOfConfig":"14"},{"size":710,"mtime":1610009904369,"results":"19","hashOfConfig":"14"},{"size":11694,"mtime":1610532842670,"results":"20","hashOfConfig":"14"},{"size":1341,"mtime":1610366147115,"results":"21","hashOfConfig":"14"},{"size":3976,"mtime":1610450527768,"results":"22","hashOfConfig":"14"},{"size":500,"mtime":1609770780543,"results":"23","hashOfConfig":"14"},{"size":1701,"mtime":1610003722999,"results":"24","hashOfConfig":"14"},{"size":567,"mtime":1610522250397,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"14rxdgi",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/daisypang/Documents/proj/pose-tagging-web/src/App.tsx",["56"],"/home/daisypang/Documents/proj/pose-tagging-web/src/LabelDataDisplay.tsx",[],["57","58"],"/home/daisypang/Documents/proj/pose-tagging-web/src/KeypointGraph.tsx",[],["59","60"],"/home/daisypang/Documents/proj/pose-tagging-web/src/reportWebVitals.ts",[],"/home/daisypang/Documents/proj/pose-tagging-web/src/Keypoint.tsx",["61"],"import React, { useCallback, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { GlowFilter } from 'pixi-filters';\nimport { Graphics } from '@inlet/react-pixi';\n\ninterface IKeypointProps {\n  x: number;\n  y: number;\n  interative: boolean;\n  highlight: boolean;\n  onPointerDown?: (e: PIXI.InteractionEvent) => void;\n  onDragEnd?: (newX: number, newY: number) => void;\n  color?: number;\n  alpha?: number;\n  radius?: number;\n}\n\nexport function Keypoint(props: IKeypointProps) {\n  const [isDragging, setIsDragging] = useState(false);\n  // store a reference to the data\n  // the reason for this is because of multitouch\n  // we want to track the movement of this particular touch\n  const [draggingData, setDraggingData] = useState<null | PIXI.InteractionData>(\n    null\n  );\n  const glowFilter = new GlowFilter({\n    distance: 15,\n    innerStrength: 2,\n    outerStrength: 2,\n    color: 0xebebb8,\n  });\n  const draw = useCallback(\n    (g: PIXI.Graphics) => {\n      // setThisGraph(g);\n      const radius = props.radius === undefined ? 4 : props.radius;\n      const color = props.color === undefined ? 0xff00ff : props.color;\n      const alpha = props.alpha === undefined ? 1 : props.alpha;\n      g.clear();\n      // outer circle\n      g.lineStyle(1, color, alpha);\n      g.drawCircle(0, 0, radius);\n      // select area\n      g.lineStyle(0);\n      g.beginFill(0xffff0b, 0);\n      g.drawCircle(0, 0, radius - 1.5);\n      g.endFill();\n      // center\n      g.lineStyle(0);\n      g.beginFill(0xffff0b, 0.7);\n      g.drawCircle(0, 0, 1);\n      g.endFill();\n      if (props.highlight) {\n        g.filters = [glowFilter];\n      } else {\n        g.filters = [];\n      }\n      g.position.set(props.x, props.y);\n    },\n    [props]\n  );\n  const onPointerDown = (e: PIXI.InteractionEvent) => {\n    if (props.onPointerDown) {\n      props.onPointerDown(e);\n    }\n    onDragStart(e);\n  };\n  const onDragStart = (e: PIXI.InteractionEvent) => {\n    setDraggingData(e.data);\n    setIsDragging(true);\n  };\n  const onDragEnd = (e: PIXI.InteractionEvent) => {\n    setDraggingData(null);\n    setIsDragging(false);\n    if (props.onDragEnd) {\n      props.onDragEnd(e.currentTarget.x, e.currentTarget.y);\n    }\n  };\n  const onDragMove = (e: PIXI.InteractionEvent) => {\n    if (isDragging) {\n      const newPosition = draggingData?.getLocalPosition(\n        e.currentTarget.parent\n      );\n      if (newPosition !== undefined) {\n        e.currentTarget.x = newPosition.x;\n        e.currentTarget.y = newPosition.y;\n      }\n    }\n  };\n  return (\n    <Graphics\n      draw={draw}\n      interactive={props.interative}\n      buttonMode={props.interative}\n      pointerdown={onPointerDown}\n      pointerup={onDragEnd}\n      pointerupoutside={onDragEnd}\n      pointermove={onDragMove}\n    />\n  );\n}\n","/home/daisypang/Documents/proj/pose-tagging-web/src/Edge.tsx",["62"],"import React, { useCallback } from 'react';\nimport { Graphics } from '@inlet/react-pixi';\n\ninterface IEdgeProps {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  color?: number;\n  alpha?: number;\n  lineWidth?: number;\n}\n\nexport function Edge(props: IEdgeProps) {\n  const color = props.color === undefined ? 0xff5e08 : props.color;\n  const alpha = props.alpha === undefined ? 1 : props.alpha;\n  const lineWidth = props.lineWidth === undefined ? 1 : props.lineWidth;\n  const draw = useCallback(\n    (g) => {\n      g.clear();\n      g.lineStyle(lineWidth, color, alpha);\n      g.moveTo(props.x1, props.y1);\n      g.lineTo(props.x2, props.y2);\n    },\n    [props]\n  );\n  return <Graphics draw={draw} />;\n}\n","/home/daisypang/Documents/proj/pose-tagging-web/src/Footer.tsx",["63","64"],"/home/daisypang/Documents/proj/pose-tagging-web/src/ImageSprite.tsx",["65","66","67"],"/home/daisypang/Documents/proj/pose-tagging-web/src/InsertKPGTool.tsx",[],["68","69"],"/home/daisypang/Documents/proj/pose-tagging-web/src/index.tsx",[],["70","71"],"/home/daisypang/Documents/proj/pose-tagging-web/src/Viewport.tsx",[],"/home/daisypang/Documents/proj/pose-tagging-web/src/tools.ts",[],{"ruleId":"72","severity":1,"message":"73","line":185,"column":25,"nodeType":"74","messageId":"75","endLine":185,"endColumn":26},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"76","replacedBy":"80"},{"ruleId":"78","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":59,"column":5,"nodeType":"84","endLine":59,"endColumn":12,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":25,"column":5,"nodeType":"84","endLine":25,"endColumn":12,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":173,"column":38,"nodeType":"90","messageId":"91","endLine":173,"endColumn":45},{"ruleId":"88","severity":1,"message":"92","line":173,"column":47,"nodeType":"90","messageId":"91","endLine":173,"endColumn":52},{"ruleId":"88","severity":1,"message":"93","line":11,"column":5,"nodeType":"90","messageId":"91","endLine":11,"endColumn":17},{"ruleId":"88","severity":1,"message":"94","line":12,"column":5,"nodeType":"90","messageId":"91","endLine":12,"endColumn":19},{"ruleId":"82","severity":1,"message":"95","line":42,"column":6,"nodeType":"84","endLine":42,"endColumn":17,"suggestions":"96"},{"ruleId":"76","replacedBy":"97"},{"ruleId":"78","replacedBy":"98"},{"ruleId":"76","replacedBy":"99"},{"ruleId":"78","replacedBy":"100"},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'glowFilter'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useCallback has missing dependencies: 'alpha', 'color', and 'lineWidth'. Either include them or remove the dependency array.",["104"],"@typescript-eslint/no-unused-vars","'success' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'imageLoading' is assigned a value but never used.","'imageLoadError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'imageElement'. Either include it or remove the dependency array.",["105"],["101"],["102"],["101"],["102"],"no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [glowFilter, props.alpha, props.color, props.highlight, props.radius, props.x, props.y]",{"range":"112","text":"113"},"Update the dependencies array to be: [alpha, color, lineWidth, props.x1, props.x2, props.y1, props.y2]",{"range":"114","text":"115"},"Update the dependencies array to be: [imageElement, imagePath]",{"range":"116","text":"117"},[1722,1729],"[glowFilter, props.alpha, props.color, props.highlight, props.radius, props.x, props.y]",[660,667],"[alpha, color, lineWidth, props.x1, props.x2, props.y1, props.y2]",[1271,1282],"[imageElement, imagePath]"]